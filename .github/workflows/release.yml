name: Publish

on:
  push:
    tags:
      - "*"

jobs:
  publish:
    name: Publish for ${{ matrix.config.target }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            files: build/app/outputs/flutter-apk/app-*-release.apk
            target: Android
          - os: ubuntu-latest
            files: jiyi-${{ github.ref_name }}-x86_64.AppImage
            target: Linux
          - os: windows-latest
            files: jiyi-${{ github.ref_name }}-x86_64_windows.zip
            target: Windows

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable

      - name: Build Linux
        if: matrix.config.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev \
                                  libpam0g-dev \
                                  libgstreamer1.0-dev \
                                  libgstreamer-plugins-base1.0-dev \
                                  libsecret-1-dev \
                                  libasound2-dev \
                                  squashfs-tools \
                                  libfuse2
          # The official appimage docker image is trash, let's do it manually
          curl https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage \
               -Lo appimage-builder
          chmod +x appimage-builder
          flutter build linux --release
          cp -r build/linux/x64/release/bundle ./AppDir
          ./appimage-builder --skip-tests

      - name: Setup Zip
        if: matrix.config.target == 'Windows'
        uses: MinoruSekine/setup-scoop@v4
        with:
          apps: zip

      - name: Build Windows
        if: matrix.config.target == 'Windows'
        run: |
          Set-PSDebug -Trace 1
          flutter build windows --release
          cp -r build/windows/x64/runner/Release/ jiyi
          zip -9 -r jiyi-${{ github.ref_name }}-x86_64_windows.zip jiyi

      - name: Setup Gradle
        if: matrix.config.target == 'Android'
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.9"

      - name: Setup android tools (Android)
        if: matrix.config.target == 'Android'
        uses: android-actions/setup-android@v3
        with:
          packages: "ndk;27.2.12479018"

      - name: Build Android
        if: matrix.config.target == 'Android'
        run: |
          set -ex
          export JIYI=$(pwd)
          export PUB_CACHE="$(pwd)/.pub-cache"
          cd $HOME
          git clone https://github.com/k2-fsa/sherpa-onnx
          export FLUTTER=$(dirname $(which flutter))
          export SHERPA_ONNX=$HOME/sherpa-onnx

          cd $JIYI
          export SHERPA_VERSION=$(sed -nE 's/.*sherpa_onnx:\s*\^?([0-9.]+).*/\1/p' pubspec.yaml)

          flutterVersion=$(sed -nE 's/\s*flutter:\s*"\^([0-9.]+)".*/\1/p' pubspec.yaml)
          git -C $FLUTTER checkout -f $flutterVersion
          git -C $SHERPA_ONNX checkout -f "v$SHERPA_VERSION"
          flutter config --no-analytics
          flutter pub get
          sed -i -e 's/ndkVersion .*/ndkVersion = "27.2.12479018"/' {android/app,$PUB_CACHE/hosted/pub.dev/{flutter_recorder-*,flutter_soloud-*,sherpa_onnx_android-*}/android}/build.gradle

          find $PUB_CACHE -type f -regex ".*\.\(wasm\|so\|zip\|gz\|exe\)$" -exec rm -f {} \;
          rm -rf $PUB_CACHE/hosted/pub.dev/gsettings-*/test/dconf/test
          rm -rf $PUB_CACHE/hosted/pub.dev/audioplayers-*/example

          pushd $PUB_CACHE/hosted/pub.dev/flutter_soloud-*/xiph
          ./build_Android.sh
          cp -a android ..
          popd

          pushd $SHERPA_ONNX
          export SHERPA_ONNX_ENABLE_JNI=OFF
          export SHERPA_ONNX_ENABLE_C_API=ON
          ./build-android-arm64-v8a.sh
          ./build-android-armv7-eabi.sh
          ./build-android-x86-64.sh
          cp build-android-arm64-v8a/install/lib/lib*.so $PUB_CACHE/hosted/pub.dev/sherpa_onnx_android-*/android/src/main/jniLibs/arm64-v8a/
          cp build-android-armv7-eabi/install/lib/lib*.so $PUB_CACHE/hosted/pub.dev/sherpa_onnx_android-*/android/src/main/jniLibs/armeabi-v7a/
          cp build-android-x86-64/install/lib/lib*.so $PUB_CACHE/hosted/pub.dev/sherpa_onnx_android-*/android/src/main/jniLibs/x86_64/
          popd

          touch $(echo $PUB_CACHE/hosted/pub.dev/flutter_recorder-*)/web/libflutter_recorder_plugin.wasm
          touch $(echo $PUB_CACHE/hosted/pub.dev/flutter_soloud-*)/web/libflutter_soloud_plugin.wasm

          flutter build apk --split-per-abi

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ matrix.config.files }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
